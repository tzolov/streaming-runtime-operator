apiVersion: v1
kind: Service
metadata:
  name: songs-generator
  labels:
    app: songs-generator
    component: songs-generator
    type: streaming-spike
    spring-deployment-id: songs-generator
spec:
  type: LoadBalancer
  ports:
    - port: 80
      name: songs-generator
      targetPort: 8080
      protocol: TCP

  selector:
    app: songs-generator
    component: songs-generator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: songs-generator
  labels:
    app: songs-generator
    type: streaming-spike
    component: songs-generator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: songs-generator
  template:
    metadata:
      labels:
        app: songs-generator
        component: songs-generator
    spec:
      containers:
        - name: songs-generator
          image: tzolov/poc-songs-generator:latest
          ports:
            - containerPort: 8080
          env:
            - name: MY_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PLAY_SONGS_GENERATOR_KAFKASERVER
              value: kafka.$(MY_NAMESPACE).svc.cluster.local:9092
            - name: PLAY_SONGS_GENERATOR_SCHEMAREGISTRYSERVER
              value: http://s-registry.$(MY_NAMESPACE).svc.cluster.local:8081
            - name: PLAY_SONGS_GENERATOR_WAITBETWEENPLAYSONGMS
              value: '200'
            - name: PLAY_SONGS_GENERATOR_PLAYEVENTSTOPIC
              value: 'kafka-stream-playevents'
            - name: PLAY_SONGS_GENERATOR_SONGSTOPIC
              value: 'kafka-stream-songs'
